Mon: This is the first time I have used Rust in two months, and while rereading old programs, I noticed I have never done any files reading or writing, which is a rather fundamental thing in any language. Pokemon showdown usage files was the first thing that came to my mind (I'm trying to get good at vgc but this hasn't gone very well), but I only notice how awkwardly the file is structured and that parsing wouldn't do it any good. I thought it would be interesting to write a Regex for it anyways so now I end up with a not very good program that pastes the name of the pokemons in a format that is actually harder to read than the original file? It is interesting as a proof of concept anyhow and I can always improve it later
Pokemon showdown actually is open source and has an API, so writing an extension of it might interest me in the future.

Tue: I decided to do something more "algorithmic" in a sense, and Vigenere cypher was the first thing that came to mind (still waiting for the next LEMMINO video). The issue with whitespaces when reading from stdin and edge cases with non-alphabetic ascii characters took a bit to figure out. I will probably come back to this later to attempt and make a version that works with UTF-8 somehow?

Wed-Thu: I made a (pretty harmless honestly) zipbomb that uses a zip file that unzips into itself. The zip file was named r.zip and I genuinely forgot from which website I found it from, but it is certainly a very interesting concept. I just used hexdump to take the hexadecimal values from the zip file and manually copy it into the program. This is a pretty bad zipbomb because window antivirus would detect it immediately, but it is fun as a concept I supposed. It also isn't very fast.
Also, Silksong release day :D
